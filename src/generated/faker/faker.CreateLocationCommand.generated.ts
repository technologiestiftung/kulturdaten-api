/* eslint-disable */
	/**
	 * This file was automatically generated by json-schema-to-typescript.
	 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file.
	 * 
	 * =>  @see ./src/schemas/models/CreateLocationCommand
	 * 
	 * and run "npm run schema-to-interface" or "npm run generate" to regenerate this file.
	 */

	import { JSONSchemaFaker, Schema } from 'json-schema-faker';
	import { CreateLocationCommand, schemaForCreateLocationCommand } from "../models/CreateLocationCommand.generated";

	import { schemaForLocationProfile } from '../models/LocationProfile.generated';
	import { schemaForLocationStatus } from '../models/LocationStatus.generated';
	import { schemaForAddress } from '../models/Address.generated';
	import { schemaForBorough } from '../models/Borough.generated';
	import { schemaForCoordinates } from '../models/Coordinates.generated';
	import { schemaForLocationClassification } from '../models/LocationClassification.generated';
	import { schemaForReference } from '../models/Reference.generated';
	import { schemaForContact } from '../models/Contact.generated';

	export function fakeCreateLocationCommand(useExamples: boolean, specifiedPropertiesForCreateLocationCommand: object = {}): CreateLocationCommand {
		const schema = schemaForCreateLocationCommand as Schema;
		const refs : Schema[] = [
			schemaForLocationProfile as Schema,
			schemaForLocationStatus as Schema,
			schemaForAddress as Schema,
			schemaForBorough as Schema,
			schemaForCoordinates as Schema,
			schemaForLocationClassification as Schema,
			schemaForReference as Schema,
			schemaForContact as Schema,

		];
		JSONSchemaFaker.option('useExamplesValue', useExamples);
		// @ts-ignore
		const fakeCreateLocationCommand: CreateLocationCommand = JSONSchemaFaker.generate(schema, refs) as CreateLocationCommand;
		// @ts-ignore
		const returnCreateLocationCommand = { ...fakeCreateLocationCommand, ...specifiedPropertiesForCreateLocationCommand };
		return returnCreateLocationCommand;
	}

	export function fakeCreateLocationCommands(useExamples: boolean, ...createCreateLocationCommand: object[]) : CreateLocationCommand[] {
		const returnCreateLocationCommands : CreateLocationCommand[] = [];
		createCreateLocationCommand.forEach(element => {
			returnCreateLocationCommands.push(fakeCreateLocationCommand(useExamples, element));
		});
		return returnCreateLocationCommands;
	}
	