/* eslint-disable */
	/**
	 * This file was automatically generated by json-schema-to-typescript.
	 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file.
	 * 
	 * =>  @see ./src/schemas/models/CreateLocation
	 * 
	 * and run "npm run schema-to-interface" or "npm run generate" to regenerate this file.
	 */

	import { JSONSchemaFaker, Schema } from 'json-schema-faker';
	import { CreateLocation, schemaForCreateLocation } from "../models/CreateLocation.generated";

	import { schemaForTitle } from '../models/Title.generated';
	import { schemaForText } from '../models/Text.generated';
	import { schemaForPostalAddress } from '../models/PostalAddress.generated';
	import { schemaForBorough } from '../models/Borough.generated';
	import { schemaForContactPoint } from '../models/ContactPoint.generated';

	export function fakeCreateLocation(useExamples: boolean, specifiedPropertiesForCreateLocation: object = {}): CreateLocation {
		const schema = schemaForCreateLocation as Schema;
		const refs : Schema[] = [
			schemaForTitle as Schema,
			schemaForText as Schema,
			schemaForPostalAddress as Schema,
			schemaForBorough as Schema,
			schemaForContactPoint as Schema,

		];
		JSONSchemaFaker.option('useExamplesValue', useExamples);
		// @ts-ignore
		const fakeCreateLocation: CreateLocation = JSONSchemaFaker.generate(schema, refs) as CreateLocation;
		// @ts-ignore
		const returnCreateLocation = { ...fakeCreateLocation, ...specifiedPropertiesForCreateLocation };
		return returnCreateLocation;
	}

	export function fakeCreateLocations(useExamples: boolean, ...createCreateLocation: object[]) : CreateLocation[] {
		const returnCreateLocations : CreateLocation[] = [];
		createCreateLocation.forEach(element => {
			returnCreateLocations.push(fakeCreateLocation(useExamples, element));
		});
		return returnCreateLocations;
	}
	