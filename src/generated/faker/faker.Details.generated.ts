/* eslint-disable */
	/**
	 * This file was automatically generated by json-schema-to-typescript.
	 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file.
	 * 
	 * =>  @see ./src/schemas/models/Details
	 * 
	 * and run "npm run schema-to-interface" or "npm run generate" to regenerate this file.
	 */

	import { JSONSchemaFaker, Schema } from 'json-schema-faker';
	import { Details, schemaForDetails } from "../models/Details.generated";

	import { schemaForEvent } from '../models/Event.generated';
	import { schemaForAttraction } from '../models/Attraction.generated';
	import { schemaForImageObject } from '../models/ImageObject.generated';
	import { schemaForCore } from '../models/Core.generated';
	import { schemaForLocation } from '../models/Location.generated';
	import { schemaForOrganization } from '../models/Organization.generated';

	export function fakeDetails(useExamples: boolean, specifiedPropertiesForDetails: object = {}): Details {
		const schema = schemaForDetails as Schema;
		const refs : Schema[] = [
			schemaForEvent as Schema,
			schemaForAttraction as Schema,
			schemaForImageObject as Schema,
			schemaForCore as Schema,
			schemaForLocation as Schema,
			schemaForOrganization as Schema,

		];
		JSONSchemaFaker.option('useExamplesValue', useExamples);
		// @ts-ignore
		const fakeDetails: Details = JSONSchemaFaker.generate(schema, refs) as Details;
		// @ts-ignore
		const returnDetails = { ...fakeDetails, ...specifiedPropertiesForDetails };
		return returnDetails;
	}

	export function fakeDetailss(useExamples: boolean, ...createDetails: object[]) : Details[] {
		const returnDetailss : Details[] = [];
		createDetails.forEach(element => {
			returnDetailss.push(fakeDetails(useExamples, element));
		});
		return returnDetailss;
	}
	