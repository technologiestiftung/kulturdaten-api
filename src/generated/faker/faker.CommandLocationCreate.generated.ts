/* eslint-disable */
	/**
	 * This file was automatically generated by json-schema-to-typescript.
	 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file.
	 * 
	 * =>  @see ./src/schemas/models/CommandLocationCreate
	 * 
	 * and run "npm run schema-to-interface" or "npm run generate" to regenerate this file.
	 */

	import { JSONSchemaFaker, Schema } from 'json-schema-faker';
	import { CommandLocationCreate, schemaForCommandLocationCreate } from "../models/CommandLocationCreate.generated";

	import { schemaForLocationProfile } from '../models/LocationProfile.generated';
	import { schemaForLocationStatus } from '../models/LocationStatus.generated';
	import { schemaForAddress } from '../models/Address.generated';
	import { schemaForBorough } from '../models/Borough.generated';
	import { schemaForCoordinates } from '../models/Coordinates.generated';
	import { schemaForLocationClassification } from '../models/LocationClassification.generated';
	import { schemaForReference } from '../models/Reference.generated';
	import { schemaForContact } from '../models/Contact.generated';

	export function fakeCommandLocationCreate(useExamples: boolean, specifiedPropertiesForCommandLocationCreate: object = {}): CommandLocationCreate {
		const schema = schemaForCommandLocationCreate as Schema;
		const refs : Schema[] = [
			schemaForLocationProfile as Schema,
			schemaForLocationStatus as Schema,
			schemaForAddress as Schema,
			schemaForBorough as Schema,
			schemaForCoordinates as Schema,
			schemaForLocationClassification as Schema,
			schemaForReference as Schema,
			schemaForContact as Schema,

		];
		JSONSchemaFaker.option('useExamplesValue', useExamples);
		// @ts-ignore
		const fakeCommandLocationCreate: CommandLocationCreate = JSONSchemaFaker.generate(schema, refs) as CommandLocationCreate;
		// @ts-ignore
		const returnCommandLocationCreate = { ...fakeCommandLocationCreate, ...specifiedPropertiesForCommandLocationCreate };
		return returnCommandLocationCreate;
	}

	export function fakeCommandLocationCreates(useExamples: boolean, ...createCommandLocationCreate: object[]) : CommandLocationCreate[] {
		const returnCommandLocationCreates : CommandLocationCreate[] = [];
		createCommandLocationCreate.forEach(element => {
			returnCommandLocationCreates.push(fakeCommandLocationCreate(useExamples, element));
		});
		return returnCommandLocationCreates;
	}
	