/* eslint-disable */
	/**
	 * This file was automatically generated by json-schema-to-typescript.
	 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file.
	 * 
	 * =>  @see ./src/schemas/models/EventDate
	 * 
	 * and run "npm run schema-to-interface" or "npm run generate" to regenerate this file.
	 */

	import { JSONSchemaFaker, Schema } from 'json-schema-faker';
	import { EventDate, schemaForEventDate } from "../models/EventDate.generated";

	import { schemaForPatchEvent } from '../models/PatchEvent.generated';
	import { schemaForTitle } from '../models/Title.generated';
	import { schemaForText } from '../models/Text.generated';
	import { schemaForShortText } from '../models/ShortText.generated';
	import { schemaForDefinedTerm } from '../models/DefinedTerm.generated';
	import { schemaForReference } from '../models/Reference.generated';

	export function fakeEventDate(useExamples: boolean, specifiedPropertiesForEventDate: object = {}): EventDate {
		const schema = schemaForEventDate as Schema;
		const refs : Schema[] = [
			schemaForPatchEvent as Schema,
			schemaForTitle as Schema,
			schemaForText as Schema,
			schemaForShortText as Schema,
			schemaForDefinedTerm as Schema,
			schemaForReference as Schema,

		];
		JSONSchemaFaker.option('useExamplesValue', useExamples);
		// @ts-ignore
		const fakeEventDate: EventDate = JSONSchemaFaker.generate(schema, refs) as EventDate;
		// @ts-ignore
		const returnEventDate = { ...fakeEventDate, ...specifiedPropertiesForEventDate };
		return returnEventDate;
	}

	export function fakeEventDates(useExamples: boolean, ...createEventDate: object[]) : EventDate[] {
		const returnEventDates : EventDate[] = [];
		createEventDate.forEach(element => {
			returnEventDates.push(fakeEventDate(useExamples, element));
		});
		return returnEventDates;
	}
	