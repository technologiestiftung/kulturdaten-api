/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file.
 *
 * =>  @see ./src/schemas/models/Details.yml
 *
 * and run "npm run schema-to-interface" or "npm run generate" to regenerate this file.
 */

import Ajv, {ValidateFunction} from "ajv";
import addFormats from "ajv-formats";

import {Event, schemaForEvent} from "./Event.generated";
import {Attraction, schemaForAttraction} from "./Attraction.generated";
import {ImageObject, schemaForImageObject} from "./ImageObject.generated";
import {Core, schemaForCore} from "./Core.generated";
import {Location, schemaForLocation} from "./Location.generated";
import {Organization, schemaForOrganization} from "./Organization.generated";

export const schemaForDetails = {
  $id: "Details.yml",
  type: "object",
  properties: {
    events: {type: "object", additionalProperties: {$ref: "Event.yml"}},
    attractions: {type: "object", additionalProperties: {$ref: "Attraction.yml"}},
    images: {type: "object", additionalProperties: {$ref: "ImageObject.yml"}},
    locations: {type: "object", additionalProperties: {$ref: "Location.yml"}},
    organizers: {type: "object", additionalProperties: {$ref: "Organization.yml"}}
  }
};

export function validateDetails(o: object): {isValid: boolean; validate: ValidateFunction} {
  const ajv = new Ajv();
  addFormats(ajv);
  ajv.addKeyword("example");
  ajv.addSchema(schemaForEvent, "Event.yml");
  ajv.addSchema(schemaForAttraction, "Attraction.yml");
  ajv.addSchema(schemaForImageObject, "ImageObject.yml");
  ajv.addSchema(schemaForCore, "Core.yml");
  ajv.addSchema(schemaForLocation, "Location.yml");
  ajv.addSchema(schemaForOrganization, "Organization.yml");

  const validate = ajv.compile(schemaForDetails);
  return {isValid: validate(o), validate: validate};
}

export interface Details {
  events?: {
    [k: string]: Event;
  };
  attractions?: {
    [k: string]: Attraction;
  };
  images?: {
    [k: string]: Core & {
      "@type"?: "Image";
    };
  };
  locations?: {
    [k: string]: Location;
  };
  organizers?: {
    [k: string]: Organization;
  };
}
