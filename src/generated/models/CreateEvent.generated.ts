/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file.
 *
 * =>  @see ./src/schemas/models/CreateEvent.yml
 *
 * and run "npm run schema-to-interface" or "npm run generate" to regenerate this file.
 */

import Ajv, {ValidateFunction} from "ajv";

import {Title, schemaForTitle} from "./Title.generated";
import {Description, schemaForDescription} from "./Description.generated";

export const schemaForCreateEvent = {
  $id: "CreateEvent.yml",
  type: "object",
  properties: {
    "@context": {type: "string", enum: ["kulturdaten.berlin/api/v1/spec"]},
    "@type": {type: "string", enum: ["Event", "EventSeries", "ExhibitionEvent"]},
    kind: {type: "string", enum: ["culture"]},
    title: {$ref: "Title.yml"},
    subTitle: {$ref: "Title.yml"},
    description: {$ref: "Description.yml"},
    shortDescription: {$ref: "Description.yml"},
    startDate: {type: "string", format: "date-time"},
    endDate: {type: "string", format: "date-time"},
    previousStartDate: {type: "string", format: "date-time"},
    doorTime: {type: "string", format: "date-time"},
    typicalAgeRange: {type: "string"},
    categories: {type: "array", items: {type: "string"}},
    keywords: {type: "array", items: {type: "string"}},
    inLanguages: {type: "array", items: {type: "string"}},
    isAccessibleForFree: {type: "boolean"},
    sameAs: {type: "string", format: "uri"},
    visibility: {type: "string", enum: ["published", "unpublished", "draft", "archived", "restricted"]},
    eventStatus: {type: "string", enum: ["cancelled", "postponed", "rescheduled", "scheduled"]},
    eventAttendanceMode: {type: "string", enum: ["offline", "online", "mixed"]},
    locations: {type: "array", items: {type: "string"}},
    organizer: {type: "string"},
    subEvents: {type: "array", items: {type: "string"}},
    superEvent: {type: "string"}
  }
};

export function validateCreateEvent(o: object): {isValid: boolean; validate: ValidateFunction} {
  const ajv = new Ajv();
  ajv.addSchema(schemaForTitle, "Title.yml");
  ajv.addSchema(schemaForDescription, "Description.yml");

  const validate = ajv.compile(schemaForCreateEvent);
  return {isValid: validate(o), validate: validate};
}

export interface CreateEvent {
  "@context"?: "kulturdaten.berlin/api/v1/spec";
  "@type"?: "Event" | "EventSeries" | "ExhibitionEvent";
  kind?: "culture";
  title?: Title;
  subTitle?: Title;
  description?: Description;
  shortDescription?: Description;
  startDate?: string;
  endDate?: string;
  previousStartDate?: string;
  doorTime?: string;
  typicalAgeRange?: string;
  categories?: string[];
  keywords?: string[];
  inLanguages?: string[];
  isAccessibleForFree?: boolean;
  sameAs?: string;
  visibility?: "published" | "unpublished" | "draft" | "archived" | "restricted";
  eventStatus?: "cancelled" | "postponed" | "rescheduled" | "scheduled";
  eventAttendanceMode?: "offline" | "online" | "mixed";
  locations?: string[];
  organizer?: string;
  subEvents?: string[];
  superEvent?: string;
}
