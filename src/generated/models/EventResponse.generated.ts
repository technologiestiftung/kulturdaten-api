/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file.
 *
 * =>  @see ./src/schemas/models/EventResponse.yml
 *
 * and run "npm run schema-to-interface" or "npm run generate" to regenerate this file.
 */

import Ajv, {ValidateFunction} from "ajv";
import addFormats from "ajv-formats";

import {Event, schemaForEvent} from "./Event.generated";
import {Metadata, schemaForMetadata} from "./Metadata.generated";
import {EventProfile, schemaForEventProfile} from "./EventProfile.generated";
import {EventStatus, schemaForEventStatus} from "./EventStatus.generated";
import {Reference, schemaForReference} from "./Reference.generated";
import {EventSchedule, schemaForEventSchedule} from "./EventSchedule.generated";
import {Contact, schemaForContact} from "./Contact.generated";
import {EventClassification, schemaForEventClassification} from "./EventClassification.generated";
import {EventAdmission, schemaForEventAdmission} from "./EventAdmission.generated";

export const schemaForEventResponse = {
  $id: "EventResponse.yml",
  type: "object",
  properties: {
    success: {type: "boolean"},
    message: {type: "string"},
    data: {type: "object", properties: {event: {$ref: "Event.yml"}}}
  },
  required: ["success", "message"]
};

export function validateEventResponse(o: object): {isValid: boolean; validate: ValidateFunction} {
  const ajv = new Ajv();
  addFormats(ajv);
  ajv.addKeyword("example");
  ajv.addSchema(schemaForEvent, "Event.yml");
  ajv.addSchema(schemaForMetadata, "Metadata.yml");
  ajv.addSchema(schemaForEventProfile, "EventProfile.yml");
  ajv.addSchema(schemaForEventStatus, "EventStatus.yml");
  ajv.addSchema(schemaForReference, "Reference.yml");
  ajv.addSchema(schemaForEventSchedule, "EventSchedule.yml");
  ajv.addSchema(schemaForContact, "Contact.yml");
  ajv.addSchema(schemaForEventClassification, "EventClassification.yml");
  ajv.addSchema(schemaForEventAdmission, "EventAdmission.yml");

  const validate = ajv.compile(schemaForEventResponse);
  return {isValid: validate(o), validate: validate};
}

export interface EventResponse {
  success: boolean;
  message: string;
  data?: {
    event?: Event;
  };
}
