import { writeFileSync } from 'fs'
import { compile,  JSONSchema  } from 'json-schema-to-typescript';
import { readFileSync } from 'fs';
import * as yaml from 'js-yaml';

async function generate() {

	generateInterface('Organization');
	generateInterface('CreateOrganization');
	generateInterface('PatchOrganization');

	generateInterface('User');
	generateInterface('CreateUser');
	generateInterface('PatchUser');

	generateInterface('Event');

	generateInterface('Location');

	generateInterface('ImageObject');

	generateInterface('Auth');
	generateInterface('Login');

	generateInterface('Health');

	generateInterface('NotFoundError');

	generateInterface('Text');
	generateInterface('Description');
	generateInterface('Title');
	generateInterface('SubTitle');


}


async function generateInterface(className: string,  rootDirectory: string = './src/schemas') {
	
	const options = (baseFile: string) => {
		return {
			bannerComment: `/* eslint-disable */
		/**
		 * This file was automatically generated by json-schema-to-typescript.
		 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file.
		 * 
		 * =>  @see ${baseFile}
		 * 
		 * and run "npm run schema-to-interface" or "npm run generate" to regenerate this file.
		 */
		`,
		additionalProperties: false,
		cwd: rootDirectory
		}
	};
	const schemaPath = `./src/schemas/${className}.yml`;
	const schemaYaml = readFileSync(schemaPath, 'utf8');
	const schemaObject = yaml.load(schemaYaml) as JSONSchema;
	const targetType = await compile(schemaObject, className, options(schemaPath));
	const targetPath = `./src/generatedModels/${className}.generated.ts`;

	writeFileSync(targetPath, targetType);
}

generate();