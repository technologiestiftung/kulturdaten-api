openapi: 3.0.2
info:
  title: API Kulturdaten.Berlin
  version: 1.0.0
servers:
  - url: http://localhost:3000/v1/
paths:
  /auth/token:
    post:
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auth'
  /organizations:
    get:
      tags:
        - Organizations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  organizations:
                    type: array
                    items:
                      $ref: '#/components/schemas/Organization'
    post:
      tags:
        - Organizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrganization'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  identifier:
                    type: string
  /organizations/{identifier}:
    parameters:
      - in: path
        name: identifier
        required: true
        schema:
          type: string
        description: The organization ID
    get:
      tags:
        - Organizations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  organization:
                    $ref: '#/components/schemas/Organization'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    patch:
      tags:
        - Organizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchOrganization'
      responses:
        '204':
          description: OK
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    delete:
      tags:
        - Organizations
      responses:
        '204':
          description: OK
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /users:
    get:
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
    post:
      tags:
        - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUser'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  identifier:
                    type: string
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailAlreadyInUseError'
  /users/{identifier}:
    parameters:
      - in: path
        name: identifier
        required: true
        schema:
          type: string
        description: The user ID
    get:
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    patch:
      tags:
        - Users
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchUser'
      responses:
        '204':
          description: OK
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    delete:
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        '204':
          description: OK
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /health:
    get:
      tags:
        - Server
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Health'
  /events:
    get:
      tags:
        - Server
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  events:
                    type: array
                    items:
                      $ref: '#/components/schemas/Event'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Login:
      type: object
      properties:
        password:
          type: string
        email:
          type: string
    Auth:
      type: object
      properties:
        accessToken:
          type: string
        expiresIn:
          type: string
    Organization:
      type: object
      properties:
        identifier:
          type: string
        name:
          type: string
        description:
          type: object
          properties:
            de:
              type: string
            en:
              type: string
            de-easy:
              type: string
          additionalProperties: true
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - identifier
        - name
    CreateOrganization:
      type: object
      properties:
        name:
          type: string
        description:
          type: object
          properties:
            de:
              type: string
            en:
              type: string
            de-easy:
              type: string
          additionalProperties: true
      required:
        - name
    PatchOrganization:
      type: object
      properties:
        name:
          type: string
        description:
          type: object
          properties:
            de:
              type: string
            en:
              type: string
            de-easy:
              type: string
          additionalProperties: true
    User:
      type: object
      properties:
        identifier:
          type: string
        email:
          type: string
        password:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        permissionFlags:
          type: number
      required:
        - identifier
        - email
        - permissionFlags
    CreateUser:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
        password:
          type: string
          format: password
          minLength: 8
        firstName:
          type: string
        lastName:
          type: string
      required:
        - email
        - password
    PatchUser:
      type: object
      properties:
        email:
          type: string
          minLength: 1
        firstName:
          type: string
          minLength: 1
        lastName:
          type: string
          minLength: 1
        permissionFlags:
          type: number
    Health:
      type: object
      properties:
        healthy:
          type: boolean
        dependencies:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              healthy:
                type: boolean
    NotFoundError:
      type: object
      properties:
        error:
          type: object
          properties:
            msg:
              type: string
    EmailAlreadyInUseError:
      type: object
      properties:
        error:
          type: object
          properties:
            msg:
              type: string
    Event:
      type: object
      properties:
        '@context':
          type: string
          enum:
            - kulturdaten.berlin/api/v1/spec
        identifier:
          type: string
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
        '@type':
          type: string
          enum:
            - Event
            - EventSeries
            - ExhibitionEvent
        kind:
          type: string
          enum:
            - culture
        origin:
          type: string
        title:
          type: object
          properties:
            de:
              type: string
            en:
              type: string
            de-easy:
              type: string
          additionalProperties: true
        subTitle:
          type: object
          properties:
            de:
              type: string
            en:
              type: string
            de-easy:
              type: string
          additionalProperties: true
        description:
          type: object
          properties:
            de:
              type: string
            en:
              type: string
            de-easy:
              type: string
          additionalProperties: true
        shortDescription:
          type: object
          properties:
            de:
              type: string
            en:
              type: string
            de-easy:
              type: string
          additionalProperties: true
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        previousStartDate:
          type: string
          format: date-time
        doorTime:
          type: string
          format: date-time
        typicalAgeRange:
          type: string
        categories:
          type: array
          items:
            type: string
        keywords:
          type: array
          items:
            type: string
        inLanguages:
          type: array
          items:
            type: string
        isAccessibleForFree:
          type: boolean
        sameAs:
          type: string
          format: uri
        visibility:
          type: string
          enum:
            - published
            - unpublished
            - draft
            - archived
            - restricted
        eventStatus:
          type: string
          enum:
            - cancelled
            - postponed
            - rescheduled
            - scheduled
        eventAttendanceMode:
          type: string
          enum:
            - offline
            - online
            - mixed
        location:
          type: object
          properties:
            name:
              type: string
        organizer:
          type: object
          properties:
            identifier:
              type: string
            name:
              type: string
            description:
              type: object
              properties:
                de:
                  type: string
                en:
                  type: string
                de-easy:
                  type: string
              additionalProperties: true
            createdAt:
              type: string
            updatedAt:
              type: string
          required:
            - identifier
            - name
        subEvents:
          type: array
          items:
            $ref: '#'
        superEvent:
          type: string
