openapi: 3.0.2
info:
  title: API Kulturdaten.Berlin
  version: 1.0.0
servers:
  - url: http://localhost:3000/v1/
paths:
  /auth/token:
    post:
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                email:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                  expiresIn:
                    type: string
  /organizers:
    get:
      tags:
        - Organizers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  organizers:
                    type: array
                    items:
                      type: object
                      properties:
                        identifier:
                          type: string
                        name:
                          type: string
                        description:
                          type: string
                          nullable: true
                        createdAt:
                          type: string
                        updatedAt:
                          type: string
                      required:
                        - identifier
                        - name
    post:
      tags:
        - Organizers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
              required:
                - name
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  identifier:
                    type: string
  /organizers/{identifier}:
    parameters:
      - in: path
        name: identifier
        required: true
        schema:
          type: string
        description: The organizer ID
    get:
      tags:
        - Organizers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  organizer:
                    type: object
                    properties:
                      identifier:
                        type: string
                      name:
                        type: string
                      description:
                        type: string
                        nullable: true
                      createdAt:
                        type: string
                      updatedAt:
                        type: string
                    required:
                      - identifier
                      - name
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      msg:
                        type: string
    patch:
      tags:
        - Organizers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
      responses:
        '204':
          description: OK
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      msg:
                        type: string
    delete:
      tags:
        - Organizers
      responses:
        '204':
          description: OK
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      msg:
                        type: string
  /users:
    get:
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      type: object
                      properties:
                        identifier:
                          type: string
                        email:
                          type: string
                        password:
                          type: string
                        firstName:
                          type: string
                        lastName:
                          type: string
                        createdAt:
                          type: string
                          format: date-time
                        updatedAt:
                          type: string
                          format: date-time
                        permissionFlags:
                          type: number
                      required:
                        - identifier
                        - email
                        - permissionFlags
    post:
      tags:
        - Users
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  minLength: 1
                password:
                  type: string
                  format: password
                  minLength: 8
                firstName:
                  type: string
                lastName:
                  type: string
              required:
                - email
                - password
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  identifier:
                    type: string
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      msg:
                        type: string
  /users/{identifier}:
    parameters:
      - in: path
        name: identifier
        required: true
        schema:
          type: string
        description: The user ID
    get:
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      identifier:
                        type: string
                      email:
                        type: string
                      password:
                        type: string
                      firstName:
                        type: string
                      lastName:
                        type: string
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
                      permissionFlags:
                        type: number
                    required:
                      - identifier
                      - email
                      - permissionFlags
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      msg:
                        type: string
    patch:
      tags:
        - Users
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  minLength: 1
                firstName:
                  type: string
                  minLength: 1
                lastName:
                  type: string
                  minLength: 1
                permissionFlags:
                  type: number
      responses:
        '204':
          description: OK
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      msg:
                        type: string
    delete:
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        '204':
          description: OK
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      msg:
                        type: string
  /health:
    get:
      tags:
        - Server
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  healthy:
                    type: boolean
                  dependencies:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        healthy:
                          type: boolean
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
