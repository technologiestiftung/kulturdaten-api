openapi: 3.0.3
info:
  title: kulturdaten.berlin API
  description: |
    *We make Berlin’s cultural diversity visible*

    This API provides access to reading and writing data about Berlin’s cultural locations, events, and more. Expand the routes below to see the available endpoints, send example requests, etc.

    ⚠️ Please note that the API and its documentation are currently **work in progress and subject to change**.

    ## Entities

    - **Attraction**: A specific cultural happening, e.g. a concert, a play, or a reading.
    - **Location**: A geographical location, e.g. a theatre, a museum, or a library.
    - **Event**: An (or multiple) attraction(s) at a certain time at a certain (or multiple) location(s).
    - **Organization**: An organization that manages their content (attractions, locations, and events).
    - **User**: A user of the platform, e.g. admins or organization members.
    - **Tag**: A descriptive tag that can be assigned to attractions, locations, events, and organizations.

    ## Authentication

    If you want to use the API to *manage* (i.e. create or update) cultural data, you need a user account with admin permissions. An initial admin user can be created with the [seed script](https://github.com/technologiestiftung/kulturdaten-api#initializing-an-empty-database).

    Once you have the user account, you can send a login request:

    ```shell
    curl -X "POST" "http://localhost:3000/api/authentication/login" \  
      -H \'Accept: application/json\' \  
      -H \'Content-Type: application/json\' \  
      -d $\'{ "email": "admin@example.com", "password": "plain-text-password" }\'
    ```

    The response of that login request contains a JWT (JSON Web Token) in the `data.accessToken` field. Store it and send it along as an `Authorization` header in the following requests, e.g.:

    ```shell
    curl -X "POST" "http://localhost:3000/api/admin/{some-admin-route}" \
      -H \'Accept: application/json\' \
      -H \'Content-Type: application/json\' \
      -H \'Authorization: Bearer {accessToken}\' \
      -d $\'{}\'
    ```

    ## Contact

    Please get in touch if you have any questions or feedback: [kontakt@kulturdaten.berlin](mailto:kontakt@kulturdaten.berlin)

    The source code and more information can be found on GitHub: <https://github.com/technologiestiftung/kulturdaten-api>

  version: "1.0.0"
  contact:
    name: kulturdaten.berlin
    url: https://www.kulturdaten.berlin/
  license:
    name: MIT
    url: https://github.com/technologiestiftung/kulturdaten-api/LICENSE
servers:
  - url: /api/
    description: This server
  - url: http://localhost:3000/api/
    description: Local development server
  - url: https://api-v2.kulturdaten.berlin/api/
  - url: https://kulturdaten-api-staging.onrender.com/api
    description: Staging server
    description: Production server
tags:
  - name: Discover cultural data
    description: Read data (attractions, events, etc.). No authentication required.
  - name: Manage cultural data
    description: Create and update data. All routes require authentication via JWT.
  - name: Users
    description: Manage users, reset your password, etc.
  - name: Authentication
    description: Log in with a user account.
  - name: Admin
    description: Manage data globally, or import third-party data.
  - name: Server
    description: Server-related routes, like health checks.
paths:
  /attractions:
    get:
      tags:
        - Discover cultural data
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/pageSize"
        - $ref: "#/components/parameters/asReference"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAttractionsResponse"
    post:
      tags:
        - Manage cultural data
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAttractionRequest"
      security:
        - bearerAuth: []
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateAttractionResponse"

  /attractions/bulk-create:
    post:
      tags:
        - Manage cultural data
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/CreateAttractionRequest"
      security:
        - bearerAuth: []
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  attractions:
                    type: array
                    items:
                      $ref: "#/components/schemas/CreateAttractionResponse"

  /attractions/search:
    post:
      tags:
        - Discover cultural data
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/pageSize"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchAttractionsRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchAttractionsResponse"

  /attractions/{identifier}:
    get:
      tags:
        - Discover cultural data
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/asReference"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAttractionResponse"
    patch:
      tags:
        - Manage cultural data
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateAttractionRequest"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Updated

  /attractions/{identifier}/externallinks:
    post:
      tags:
        - Manage cultural data
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddExternalLinkRequest"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK
    delete:
      tags:
        - Manage cultural data
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RemoveExternalLinkRequest"
      security:
        - bearerAuth: []
      responses:
        "204":
          description: OK

  /attractions/{identifier}/archive:
    post:
      tags:
        - Manage cultural data
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Archived

  /attractions/{identifier}/unarchive:
    post:
      tags:
        - Manage cultural data
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Unarchived

  /attractions/{identifier}/publish:
    post:
      tags:
        - Manage cultural data
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Published

  /attractions/{identifier}/unpublish:
    post:
      tags:
        - Manage cultural data
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Unpublished

  /events:
    get:
      tags:
        - Discover cultural data
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/pageSize"
        - $ref: "#/components/parameters/asReference"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetEventsResponse"
    post:
      tags:
        - Manage cultural data
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateEventRequest"
      security:
        - bearerAuth: []
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateEventResponse"

  /events/bulk-create:
    post:
      tags:
        - Manage cultural data
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/CreateEventRequest"
      security:
        - bearerAuth: []
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  attractions:
                    type: array
                    items:
                      $ref: "#/components/schemas/CreateEventResponse"

  /events/search:
    post:
      tags:
        - Discover cultural data
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/pageSize"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchEventsRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchEventsResponse"

  /events/{identifier}:
    get:
      tags:
        - Discover cultural data
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/asReference"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetEventResponse"
    patch:
      tags:
        - Manage cultural data
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateEventRequest"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK

  /events/{identifier}/locations:
    put:
      tags:
        - Manage cultural data
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddEventLocationRequest"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK

    delete:
      tags:
        - Manage cultural data
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RemoveEventLocationRequest"
      security:
        - bearerAuth: []
      responses:
        "204":
          description: No Content

  /events/{identifier}/attractions:
    put:
      tags:
        - Manage cultural data
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddEventAttractionRequest"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK

    delete:
      tags:
        - Manage cultural data
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RemoveEventAttractionRequest"
      security:
        - bearerAuth: []
      responses:
        "204":
          description: No Content

  /events/{identifier}/organizer:
    put:
      tags:
        - Manage cultural data
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetEventOrganizerRequest"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK

    delete:
      tags:
        - Manage cultural data
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        "204":
          description: No Content

  /events/{identifier}/publish:
    post:
      tags:
        - Manage cultural data
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK

  /events/{identifier}/unpublish:
    post:
      tags:
        - Manage cultural data
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK

  /events/{identifier}/reschedule:
    post:
      tags:
        - Manage cultural data
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RescheduleEventRequest"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK

  /events/{identifier}/postpone:
    post:
      tags:
        - Manage cultural data
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK

  /events/{identifier}/cancel:
    post:
      tags:
        - Manage cultural data
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK

  /events/{identifier}/archive:
    post:
      tags:
        - Manage cultural data
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK

  /events/{identifier}/unarchive:
    post:
      tags:
        - Manage cultural data
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK

  /events/{identifier}/duplicate:
    post:
      tags:
        - Manage cultural data
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuplicateEventResponse"

  /locations:
    get:
      tags:
        - Discover cultural data
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/pageSize"
        - $ref: "#/components/parameters/asReference"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetLocationsResponse"
    post:
      tags:
        - Manage cultural data
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateLocationRequest"
      security:
        - bearerAuth: []
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateLocationResponse"

  /locations/bulk-create:
    post:
      tags:
        - Manage cultural data
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/CreateLocationRequest"
      security:
        - bearerAuth: []
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  attractions:
                    type: array
                    items:
                      $ref: "#/components/schemas/CreateLocationRequest"

  /locations/search:
    post:
      tags:
        - Discover cultural data
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/pageSize"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchLocationsRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchLocationsResponse"

  /locations/{identifier}:
    get:
      tags:
        - Discover cultural data
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/asReference"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetLocationResponse"
    patch:
      tags:
        - Manage cultural data
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateLocationRequest"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK

  /locations/{identifier}/manager:
    put:
      tags:
        - Manage cultural data
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetLocationManagerRequest"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK
    delete:
      tags:
        - Manage cultural data
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK

  /locations/{identifier}/open:
    post:
      tags:
        - Manage cultural data
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK

  /locations/{identifier}/close:
    post:
      tags:
        - Manage cultural data
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK

  /locations/{identifier}/permanentlyClose:
    post:
      tags:
        - Manage cultural data
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK

  /locations/{identifier}/archive:
    post:
      tags:
        - Manage cultural data
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK

  /locations/{identifier}/unarchive:
    post:
      tags:
        - Manage cultural data
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK

  /locations/{identifier}/claim:
    post:
      tags:
        - Manage cultural data
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClaimLocationRequest"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK

  /organizations:
    get:
      tags:
        - Discover cultural data
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/pageSize"
        - $ref: "#/components/parameters/asReference"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetOrganizationsResponse"
    post:
      tags:
        - Manage cultural data
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOrganizationRequest"
      security:
        - bearerAuth: []
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateOrganizationResponse"
        "400":
          description: Not Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /organizations/bulk-create:
    post:
      tags:
        - Manage cultural data
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/CreateOrganizationRequest"
      security:
        - bearerAuth: []
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  attractions:
                    type: array
                    items:
                      $ref: "#/components/schemas/CreateOrganizationResponse"

  /organizations/search:
    post:
      tags:
        - Discover cultural data
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/pageSize"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchOrganizationsRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchOrganizationsResponse"

  /organizations/{identifier}:
    get:
      tags:
        - Discover cultural data
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/asReference"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetOrganizationResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
    patch:
      tags:
        - Manage cultural data
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateOrganizationRequest"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK

  /organizations/{identifier}/activate:
    post:
      tags:
        - Manage cultural data
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK

  /organizations/{identifier}/deactivate:
    post:
      tags:
        - Manage cultural data
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK

  /organizations/{identifier}/retire:
    post:
      tags:
        - Manage cultural data
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK

  /organizations/{identifier}/archive:
    post:
      tags:
        - Manage cultural data
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK

  /organizations/{identifier}/unarchive:
    post:
      tags:
        - Manage cultural data
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK

  /users:
    get:
      tags:
        - Users
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/pageSize"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetUsersResponse"
    post:
      tags:
        - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserRequest"
      security:
        - bearerAuth: []
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateUserResponse"
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmailAlreadyInUseError"

  /users/{identifier}:
    parameters:
      - in: path
        name: identifier
        required: true
        schema:
          type: string
        description: The user ID
    get:
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: "#/components/schemas/GetUserResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
    patch:
      tags:
        - Users
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUserRequest"

      responses:
        "204":
          description: OK
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
    delete:
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        "204":
          description: OK
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"

  /users/{identifier}/updatePassword:
    parameters:
      - in: path
        name: identifier
        required: true
        schema:
          type: string
        description: The user ID
    patch:
      tags:
        - Users
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUserPasswordRequest"
      responses:
        "204":
          description: OK
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"

  /authentication/login:
    post:
      tags:
        - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"

  /tags:
    get:
      tags:
        - Discover cultural data
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetTagsResponse"
    post:
      tags:
        - Admin
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTagRequest"
      security:
        - bearerAuth: []
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateTagResponse"

  /tags/{identifier}:
    get:
      tags:
        - Discover cultural data
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetTagResponse"

  /tags/attractions:
    get:
      tags:
        - Discover cultural data
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetTagsResponse"

  /tags/events:
    get:
      tags:
        - Discover cultural data
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetTagsResponse"

  /tags/locations:
    get:
      tags:
        - Discover cultural data
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetTagsResponse"

  /tags/organizations:
    get:
      tags:
        - Discover cultural data
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetTagsResponse"

  /health:
    get:
      tags:
        - Server
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthResponse"

  /admin/attractions:
    get:
      description: Returns a list of paginated attractions with their metadata and related events.
      tags:
        - Admin
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/pageSize"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAdminAttractionsResponse"
  /admin/attractions/{identifier}:
    get:
      description: Returns an attraction with its metadata and related events.
      tags:
        - Admin
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAdminAttractionResponse"

  /admin/harvest/baevents-bezirkskalender:
    post:
      tags:
        - Admin
      requestBody:
        content:
          application/json:
            schema:
              type: array
              default: ["22"]
              items:
                type: string
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      createdOrganizations:
                        type: array
                        items:
                          type: string
                      duplicateOrganizations:
                        type: array
                        items:
                          type: string
                      createdLocations:
                        type: array
                        items:
                          type: string
                      duplicateLocations:
                        type: array
                        items:
                          type: string
                      createdEvents:
                        type: array
                        items:
                          type: string
                      duplicateEvents:
                        type: array
                        items:
                          type: string
                      createdAttractions:
                        type: array
                        items:
                          type: string
                      duplicateAttractions:
                        type: array
                        items:
                          type: string

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  parameters:
    asReference:
      name: asReference
      description: Return references instead of full objects
      in: query
      required: false
      example: false
      schema:
        type: boolean
    page:
      name: page
      description: Default value is 1
      in: query
      required: false
      example: 1
      schema:
        type: number
    pageSize:
      name: pageSize
      description: Default value is 30
      in: query
      required: false
      example: 30
      schema:
        type: number

  schemas:
    Reference:
      $ref: models/Reference.yml

    Response:
      $ref: models/Response.yml

    Error:
      $ref: models/Error.yml

    NotFoundError:
      $ref: models/Error.yml

    Event:
      $ref: models/Event.yml

    AdminAttraction:
      $ref: models/AdminAttraction.yml

    Attraction:
      $ref: models/Attraction.yml

    Location:
      $ref: models/Location.yml

    Organization:
      $ref: models/Organization.yml

    User:
      $ref: models/User.yml

    UpdateUserPasswordRequest:
      $ref: models/UpdateUserPasswordRequest.yml

    HealthResponse:
      $ref: models/HealthResponse.yml

    AddExternalLinkRequest:
      $ref: models/AddExternalLinkRequest.yml

    GetOrganizationResponse:
      $ref: models/GetOrganizationResponse.yml

    GetOrganizationsResponse:
      $ref: models/GetOrganizationsResponse.yml

    CreateOrganizationRequest:
      $ref: models/CreateOrganizationRequest.yml

    CreateOrganizationResponse:
      $ref: models/CreateOrganizationResponse.yml

    SearchOrganizationsRequest:
      $ref: models/SearchOrganizationsRequest.yml

    SearchOrganizationsResponse:
      $ref: models/SearchOrganizationsResponse.yml

    UpdateOrganizationRequest:
      $ref: models/UpdateOrganizationRequest.yml

    GetAttractionsResponse:
      $ref: models/GetAttractionsResponse.yml

    CreateAttractionRequest:
      $ref: models/CreateAttractionRequest.yml

    CreateAttractionResponse:
      $ref: models/CreateAttractionResponse.yml

    SearchAttractionsRequest:
      $ref: models/SearchAttractionsRequest.yml

    SearchAttractionsResponse:
      $ref: models/SearchAttractionsResponse.yml

    GetAttractionResponse:
      $ref: models/GetAttractionResponse.yml

    UpdateAttractionRequest:
      $ref: models/UpdateAttractionRequest.yml

    GetLocationsResponse:
      $ref: models/GetLocationsResponse.yml

    CreateLocationRequest:
      $ref: models/CreateLocationRequest.yml

    CreateLocationResponse:
      $ref: models/CreateLocationResponse.yml

    SearchLocationsRequest:
      $ref: models/SearchLocationsRequest.yml

    SearchLocationsResponse:
      $ref: models/SearchLocationsResponse.yml

    GetLocationResponse:
      $ref: models/GetLocationResponse.yml

    UpdateLocationRequest:
      $ref: models/UpdateLocationRequest.yml

    SetLocationManagerRequest:
      $ref: models/SetLocationManagerRequest.yml

    ClaimLocationRequest:
      $ref: models/ClaimLocationRequest.yml

    GetEventsResponse:
      $ref: models/GetEventsResponse.yml

    CreateEventRequest:
      $ref: models/CreateEventRequest.yml

    CreateEventResponse:
      $ref: models/CreateEventResponse.yml

    SearchEventsRequest:
      $ref: models/SearchEventsRequest.yml

    SearchEventsResponse:
      $ref: models/SearchEventsResponse.yml

    GetEventResponse:
      $ref: models/GetEventResponse.yml

    UpdateEventRequest:
      $ref: models/UpdateEventRequest.yml

    AddEventLocationRequest:
      $ref: models/AddEventLocationRequest.yml

    RemoveEventLocationRequest:
      $ref: models/RemoveEventLocationRequest.yml

    AddEventAttractionRequest:
      $ref: models/AddEventAttractionRequest.yml

    RemoveEventAttractionRequest:
      $ref: models/RemoveEventAttractionRequest.yml

    SetEventOrganizerRequest:
      $ref: models/SetEventOrganizerRequest.yml

    RescheduleEventRequest:
      $ref: models/RescheduleEventRequest.yml

    DuplicateEventResponse:
      $ref: models/DuplicateEventResponse.yml

    LoginRequest:
      $ref: models/LoginRequest.yml

    LoginResponse:
      $ref: models/LoginResponse.yml

    GetUsersResponse:
      $ref: models/GetUsersResponse.yml

    CreateUserRequest:
      $ref: models/CreateUserRequest.yml

    EmailAlreadyInUseError:
      $ref: models/EmailAlreadyInUseError.yml

    GetUserResponse:
      $ref: models/GetUserResponse.yml

    UpdateUserRequest:
      $ref: models/UpdateUserRequest.yml

    RemoveExternalLinkRequest:
      $ref: models/RemoveExternalLinkRequest.yml

    CreateUserResponse:
      $ref: models/CreateUserResponse.yml

    GetTagsResponse:
      $ref: models/GetTagsResponse.yml

    GetTagResponse:
      $ref: models/GetTagResponse.yml

    CreateTagRequest:
      $ref: models/CreateTagRequest.yml

    CreateTagResponse:
      $ref: models/CreateTagResponse.yml

    GetAdminAttractionResponse:
      $ref: models/GetAdminAttractionResponse.yml

    GetAdminAttractionsResponse:
      $ref: models/GetAdminAttractionsResponse.yml

    TranslatableField:
      $ref: models/TranslatableField.yml
