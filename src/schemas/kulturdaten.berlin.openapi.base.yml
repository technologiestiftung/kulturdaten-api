openapi: 3.0.3
info:
  title: API Kulturdaten.Berlin
  version: "1.0.0"
servers:
  - url: http://localhost:3000/api/v1/
paths:
  /auth/token:
    post:
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Login"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Auth"

  /events:
    get:
      tags:
        - Events
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  events:
                    type: array
                    items:
                      $ref: "#/components/schemas/Event"
    post:
      tags:
        - Events
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateEvent"
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  identifier:
                    type: string

  /events/{identifier}:
    parameters:
      - in: path
        name: identifier
        required: true
        schema:
          type: string
        description: The event ID
    get:
      tags:
        - Events
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  event:
                    $ref: "#/components/schemas/Event"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
    patch:
      tags:
        - Events
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchEvent"
      responses:
        "204":
          description: OK
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
    delete:
      tags:
        - Events
      responses:
        "204":
          description: OK
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"

  /locations:
    get:
      tags:
        - Locations
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  locations:
                    type: array
                    items:
                      $ref: "#/components/schemas/Location"
    post:
      tags:
        - Locations
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateLocation"
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  identifier:
                    type: string

  /locations/{identifier}:
    parameters:
      - in: path
        name: identifier
        required: true
        schema:
          type: string
        description: The location ID
    get:
      tags:
        - Locations
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  location:
                    $ref: "#/components/schemas/Location"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
    patch:
      tags:
        - Locations
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchLocation"
      responses:
        "204":
          description: OK
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
    delete:
      tags:
        - Locations
      responses:
        "204":
          description: OK
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"

  /organizations:
    get:
      tags:
        - Organizations
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  organizations:
                    type: array
                    items:
                      $ref: "#/components/schemas/Organization"

    post:
      tags:
        - Organizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOrganization"
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  identifier:
                    type: string

  /organizations/{identifier}:
    parameters:
      - in: path
        name: identifier
        required: true
        schema:
          type: string
        description: The organization ID
    get:
      tags:
        - Organizations
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  organization:
                    $ref: "#/components/schemas/Organization"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
    patch:
      tags:
        - Organizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchOrganization"
      responses:
        "204":
          description: OK
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
    delete:
      tags:
        - Organizations
      responses:
        "204":
          description: OK
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"

  /users:
    get:
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
    post:
      tags:
        - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUser"
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  identifier:
                    type: string
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmailAlreadyInUseError"

  /users/{identifier}:
    parameters:
      - in: path
        name: identifier
        required: true
        schema:
          type: string
        description: The user ID
    get:
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: "#/components/schemas/User"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
    patch:
      tags:
        - Users
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchUser"
      responses:
        "204":
          description: OK
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
    delete:
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        "204":
          description: OK
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"

  /health:
    get:
      tags:
        - Server
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Health"

  /admin/harvest/district:
    post:
      tags:
        - Harvest district data
      responses:
        "200":
          description: OK

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Login:
      $ref: models/Login.yml

    Auth:
      $ref: models/Auth.yml

    Organization:
      $ref: models/Organization.yml

    CreateOrganization:
      $ref: models/CreateOrganization.yml

    PatchOrganization:
      $ref: models/PatchOrganization.yml

    User:
      $ref: models/User.yml

    CreateUser:
      $ref: models/CreateUser.yml

    PatchUser:
      $ref: models/PatchUser.yml

    Health:
      $ref: models/Health.yml

    NotFoundError:
      $ref: models/NotFoundError.yml

    EmailAlreadyInUseError:
      $ref: models/EmailAlreadyInUseError.yml

    Event:
      $ref: models/Event.yml

    CreateEvent:
      $ref: models/CreateEvent.yml

    Reference:
      $ref: models/Reference.yml

    PatchEvent:
      $ref: models/PatchEvent.yml

    Location:
      $ref: models/Location.yml

    PatchLocation:
      $ref: models/PatchLocation.yml

    CreateLocation:
      $ref: models/CreateLocation.yml
