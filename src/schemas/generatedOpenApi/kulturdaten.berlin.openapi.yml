openapi: 3.0.2
info:
  title: API Kulturdaten.Berlin
  version: 1.0.0
servers:
  - url: http://localhost:3000/v1/
paths:
  /auth/token:
    post:
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auth'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
  /organizers:
    get:
      tags:
        - Organizers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  organizers:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        description:
                          type: string
                          nullable: true
                        createdAt:
                          type: string
                        updatedAt:
                          type: string
                      required:
                        - id
                        - name
    post:
      tags:
        - Organizers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrganizer'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
  /organizers/{organizerId}:
    parameters:
      - in: path
        name: organizerId
        required: true
        schema:
          type: string
        description: The organizer ID
    get:
      tags:
        - Organizers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  organizer:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      description:
                        type: string
                        nullable: true
                      createdAt:
                        type: string
                      updatedAt:
                        type: string
                    required:
                      - id
                      - name
        '404':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      msg:
                        type: string
    patch:
      tags:
        - Organizers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchOrganizer'
      responses:
        '204':
          description: OK
        '404':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      msg:
                        type: string
    delete:
      tags:
        - Organizers
      responses:
        '204':
          description: OK
        '404':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      msg:
                        type: string
  /users:
    get:
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
    post:
      tags:
        - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUser'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
  /users/{userId}:
    parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
        description: The user ID
    get:
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
        '404':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      msg:
                        type: string
    patch:
      tags:
        - Users
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchUser'
      responses:
        '204':
          description: OK
        '404':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      msg:
                        type: string
    delete:
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        '204':
          description: OK
        '404':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      msg:
                        type: string
  /health:
    get:
      tags:
        - Server
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Health'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Auth:
      type: object
      properties:
        accessToken:
          type: string
        expiresIn:
          type: string
    Login:
      type: object
      properties:
        password:
          type: string
        email:
          type: string
    CreateOrganizer:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
      required:
        - name
    PutOrganizer:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    PatchOrganizer:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        password:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    CreateUser:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
        firstName:
          type: string
        lastName:
          type: string
      required:
        - email
        - password
    PatchUser:
      type: object
      properties:
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        permissionFlags:
          type: number
    Health:
      type: object
      properties:
        healthy:
          type: boolean
        dependencies:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              healthy:
                type: boolean
    ValidationError:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              location:
                type: string
              msg:
                type: string
              param:
                type: string
              value:
                type: string
